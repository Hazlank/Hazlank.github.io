<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hazlank blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-22T11:58:22.205Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hazlank</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数制</title>
    <link href="http://yoursite.com/2016/12/14/numerical-system/"/>
    <id>http://yoursite.com/2016/12/14/numerical-system/</id>
    <published>2016-12-14T02:38:16.000Z</published>
    <updated>2016-12-22T11:58:22.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数制"><a href="#数制" class="headerlink" title="数制"></a>数制</h1><p>数制是用一组固定的数宇和一套统一的规则来表示数的方祛。数值的计算一般都是近位计算。按照进位的规则进行计数的数制，称为进位计数制。常见的进位计数制有二进制，八进制，十六进制，十进制就是我们生活当中通用的数制，满十进一</p>
<p><strong>进位计数制有两个基本要素：基数和权。</strong></p>
<h4 id="基数"><a href="#基数" class="headerlink" title="基数"></a>基数</h4><p>基数是指某进位计数制中允许使用的数字的个数。</p>
<ul>
<li>二进制基数就是2，八进制基数就是8</li>
<li>大于10的基数当单个数字超过9的时候会用其他符号表示，例如在十六进制中10用a表示，直到F(15)</li>
</ul>
<h4 id="权"><a href="#权" class="headerlink" title="权"></a>权</h4><p>以基数为底，以某一数字所在位置的序号为指数的幂，称为该数字在该位置的权。</p>
<p>以十进制数123.45来说每个数字的权都不同</p>
<ul>
<li>小数点从左往右边的权分别为10(基数)^0，10^1，10^2</li>
<li>小数点从左往右边的权分别为10^-1，10^-2</li>
</ul>
<h1 id="数制计算方法"><a href="#数制计算方法" class="headerlink" title="数制计算方法"></a>数制计算方法</h1><p>在c语言中，为了表示一个数字为八进制，会在其加个前缀0，比如050就表示42，前缀0X代表十六进制数字</p>
<p>1.转十进制的方法通常为:从左到右，当前位数值*权相加</p>
<ul>
<li>二进制的1101: <code>(1*2^3)+(1*2^2)+(0*2^1)+(1*2^0)=13</code></li>
<li>八进制的426:  <code>(4*8^2)+(2*8^1)+(6*8^0)=278</code></li>
<li>十六进制1af:  <code>(1*16^2)+(10*16^1)+(15*16^0)=431</code></li>
</ul>
<p>2.十进制转其他进制的算法：数值除以基数，取商直到比基数小，再倒取余数</p>
<ul>
<li><p>十进制33转二进制：<br><pre>33/2=16……1<br>16/2=8……0<br>8/2=4……0<br>4/2=2……0<br>2/2=1……0</pre><br>倒取余数后二进制的33就表示为100001  </p>
</li>
<li><p>同理十进制674转八进制：<br><pre>674/8=84……2<br>84/8=10……4<br>10/8=1……2<br></pre><br>倒取余数后八进制的674就表示为1242</p>
</li>
<li><p>十进制685转十六进制:（商）+基数<em>小数<br><pre>685/16=42.8125<br>42/16=2.625<br></pre><br>（2）+（0.625</em>16）+（0.8125*16）=2 + 10(a) +13(d)<br>   所以最后转换的十六进制就为2ad</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数制&quot;&gt;&lt;a href=&quot;#数制&quot; class=&quot;headerlink&quot; title=&quot;数制&quot;&gt;&lt;/a&gt;数制&lt;/h1&gt;&lt;p&gt;数制是用一组固定的数宇和一套统一的规则来表示数的方祛。数值的计算一般都是近位计算。按照进位的规则进行计数的数制，称为进位计数制。常见的进位计
    
    </summary>
    
    
      <category term="计算机原理" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
      <category term="数值" scheme="http://yoursite.com/tags/%E6%95%B0%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>字符编码</title>
    <link href="http://yoursite.com/2016/11/28/character-encoding/"/>
    <id>http://yoursite.com/2016/11/28/character-encoding/</id>
    <published>2016-11-28T05:56:21.000Z</published>
    <updated>2016-12-22T07:07:16.452Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h2><h3 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h3><p>在计算机内部，所有的信息最终都表示为一个二进制的字符串。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就可以组合出256种状态，这被称为一个字节（byte）。也就是说，一个字节一共可以用来表示256种不同的状态，每一个状态对应一个符号，就是256个符号，从0000000到11111111。</p>
<h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><p>世界上存在着多种编码方式，同一个二进制数字可以被解释成不同的符号。因此，要想打开一个文本文件，就必须知道它的编码方式，否则用错误的编码方式解读，就会出现乱码。为什么电子邮件常常出现乱码？就是因为发信人和收信人使用的编码方式不一样。</p>
<p>可以想象，如果有一种编码，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是Unicode，这是一种所有符号的编码</p>
<p>Unicode是一个很大的集合，现在的规模可以容纳100多万个符号。每个符号的编码都不一样，比如，U+0639表示阿拉伯字母Ain，U+0041表示英语的大写字母A，U+4E25表示汉字”严”。具体的符号对应表，可以查询unicode.org，或者专门的汉字对应表。</p>
<h3 id="utf-8"><a href="#utf-8" class="headerlink" title="utf-8"></a>utf-8</h3><p>UTF-8就是在互联网上使用最广的一种Unicode的实现方式。其他实现方式还包括UTF-16（字符用两个字节或四个字节表示）和UTF-32（字符用四个字节表示），不过在互联网上基本不用。重复一遍，这里的关系是，UTF-8是Unicode的实现方式之一。<br>UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。<br>UTF-8的编码规则很简单，只有二条：  </p>
<p>1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。<br>2）对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。</p>
<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>(\/*)[u4E00-\u9FA5].+|(\d.)?[\u4e00-\u9fa5].+|\w.+\s[\u4e00-\u9fa5].+<br>\/*(\s.)?((\r\n).<em>){????}\</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;字符编码&quot;&gt;&lt;a href=&quot;#字符编码&quot; class=&quot;headerlink&quot; title=&quot;字符编码&quot;&gt;&lt;/a&gt;字符编码&lt;/h2&gt;&lt;h3 id=&quot;ASCII码&quot;&gt;&lt;a href=&quot;#ASCII码&quot; class=&quot;headerlink&quot; title=&quot;ASCII
    
    </summary>
    
    
      <category term="计算机原理" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
      <category term="字符编码" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
</feed>
